networks:
  app-network:
    name: app-network
    driver: bridge

volumes:
  postgres_data:

services:
  db:
    container_name: db
    image: postgres:13
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    container_name: backend
    build:
      context: ./backend
    volumes:
      - ./backend:/app
      - ./backend/media:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - logstash
      - kibana
    environment:
      - DATABASE_URL=postgres://myuser:mypassword@db:5432/mydatabase
    networks:
      - app-network

  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/public:/usr/share/nginx/html/public
      - ./frontend/static:/usr/share/nginx/html/static
      - ./backend/media:/usr/share/nginx/html/media
    depends_on:
      - backend
    networks:
      - app-network

  elasticsearch:
    build:
      context: ./elasticsearch
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - app-network

  logstash:
    build:
      context: ./logstash
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./backend/django.log:/logs/django.log
    ports:
      - "5044:5044"
    networks:
      - app-network
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: ./kibana
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - app-network
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.9
    container_name: filebeat
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./backend/logs:/var/log/app
    networks:
      - app-network
    depends_on:
      - logstash

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: always

  postgres_exporter:
    image: wrouesnel/postgres_exporter
    container_name: postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://user:password@db:5432/dbname"
    ports:
      - "9187:9187"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus
    restart: always
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "secure_password"
